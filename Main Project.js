/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started
ww
@title: 
@author: 
@tags: []
@img: ""
@addedOn: 2024-00-00
*/

const player = "p";
const box = "b";
const goal = "g";
const wall = "w";
const background = "k";
const bouy = "y";
const grass = "x";
// assign bitmap art to each sprite
setLegend(
  [ player, bitmap`
................
................
......66666.....
.....6666666....
.....6069606....
.....6699966....
......66666.....
.....L11111L....
....LLL11LLCL...
....CLLLLLLCC...
....CCLLLCCCC...
.....CLLLLCC....
................
................
................
................`],
  [ box, bitmap`
................
................
......2266......
.....222666.....
.....226666.....
....22666666....
....26666666....
...2266666666...
...266666666F...
...66666666FF...
...666666FF6F...
...6666666FFF...
....666FFFFF....
.....6F6FFF.....
................
................`],
  [ goal, bitmap`
................
................
................
................
................
................
................
.........2......
...CC2CC266C....
..CC266F666CC...
.CCF666F2FFFCC..
.CFFFFF266FFFC..
..CCFFF666FCC...
....CCCCCCC.....
................
................`],
  [ wall, bitmap`
999999L999999999
LLLLLLLLLLLLLLLL
9CCCCCC999LCCC99
9999999999LC9999
9999999999L99999
9LLLLLLLLLLLLLLL
999CCCCLCCCCCC99
99999CCL99999999
9999999L99999999
LLLLLLLLLLLLLLLL
99CCCCCCC99LCCC9
9999L999999LC999
9999L999999L9999
9LLLLLLLLLLLLLLL
999CCCLCCCCC9999
999999L999999999`],
  [ background, bitmap`
5555555555555555
5555555555555555
5555755557555555
5755555555555755
5555755575555555
5555555555555555
5555555555557555
5555555555555555
7557557555555555
5555555555555555
5755575555555557
5555555557555555
5555555555555755
5555755575575555
7575555555755555
5555555755555575`],
  [ bouy, bitmap`
................
....11333311....
...1133223311...
...1.L3333L.1...
...11.LLLL.11...
...11......11...
...1.L3333L.1...
...11.LLLL.11...
...11......11...
...1L......L1...
...1.LL33LL.1...
...1LL1111LL1...
..333LL11LL333..
..333333333333..
....33333333....
................`],
  [ grass, bitmap`
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DD444DDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDD444444DDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDD444444DDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDD44444444DD
DDDDDDDDDDDDDDDD
DD44444DDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDD44444
DDDD4444DDDDDDDD`]
);

setBackground(background);

// Create a tune:
const melody = tune`
750: C5~750 + C4~750,
750: E4~750,
750: G4~750,
750: D5~750,
750: C5~750,
750,
750: A5~750 + A4~750,
750: F5~750,
750: E5~750,
750: D5~750,
750: C5~750,
750: C4~750,
750: C4~750,
750: D4~750,
750: E4~750,
750: A4~750 + A5~750,
750: G4~750,
750: F4~750,
750: B4~750 + B5~750,
750: A4~750,
750: G4~750,
750: D5~750 + D4~750,
750: C5~750,
750: B4~750,
750: A4~750,
750: G4~750,
750: D4~750,
750: F4~750,
750: A4~750,
750: F4~750,
750: D4~750,
750: C4~750`
const tabs = tune`
750: C4^750 + F4~750 + A4~750,
750: C4~750 + A4~750 + F4~750,
750: C4~750 + A4~750 + F4~750,
750: C4^750 + A4~750 + F4~750,
750: C4~750 + G4~750 + E4~750 + C5^750,
750: C4~750 + E4~750 + G4~750,
750: E4~750 + G4~750 + C4^750 + D5^750,
750: C4~750 + E4~750 + G4~750 + C5^750,
750: A4~750 + F4~750 + C4~750,
750: A4~750 + F4~750 + C4^750 + D5^750,
750: F4~750 + C4~750 + A4~750 + F5^750,
750: A4~750 + F4~750 + C4~750 + G5^750,
750: G4~750 + E4~750 + C4^750,
750: G4~750 + E4~750 + C4~750,
750: G4~750 + E4~750 + C4~750 + F5^750,
750: G4~750 + E4~750 + C4^750 + E5^750,
750: F4~750 + A4~750 + C5~750,
750: F4~750 + A4~750 + C5~750,
750: G4~750 + B4~750 + D5~750,
750: G4~750 + B4~750 + D5~750,
750: G5^750,
750: F5~750,
750: D5^750 + D4^750,
750: B4~750 + D4~750,
750: G4^750 + D4~750,
750: A5~750 + D4^750,
750: G5~750 + D4~750,
750: F5~750 + D4~750,
750: D5~750 + D4^750,
750: B4~750 + D4~750,
750: D5~750 + D4~750,
750: C5~750 + C4^750`
const cash = tune`
98.6842105263158: C4~98.6842105263158,
98.6842105263158: E4^98.6842105263158,
98.6842105263158: G4^98.6842105263158,
98.6842105263158: D4~98.6842105263158,
98.6842105263158: F4^98.6842105263158,
98.6842105263158: A4^98.6842105263158,
98.6842105263158: E4~98.6842105263158,
98.6842105263158: G4^98.6842105263158,
98.6842105263158: B4^98.6842105263158,
2269.7368421052633`
const level1m = tune `
500: G4~500 + D4~500,
500: G4~500 + D4~500,
500: G4~500 + D4~500,
500: D4~500 + F4~500 + A4~500,
500: D4~500 + F4~500 + A4~500,
500: D4~500 + F4~500 + A4~500,
500: E4~500 + G4~500 + B4~500,
500: E4~500 + G4~500 + B4~500,
500: E4~500 + G4~500 + B4~500,
500: F4~500 + A4~500 + C5~500,
500: F4~500 + A4~500 + C5~500,
500: F4~500 + A4~500 + C5~500,
500: D4~500 + G4~500,
500: D4~500 + G4~500,
500: D4~500 + G4~500,
500: C4~500 + G4~500 + A5~500,
500: C4~500 + F4~500 + G5~500,
500: C4~500 + G4~500 + A5~500,
500: G5~500 + C4~500 + F4~500,
500: G4~500 + D4~500,
500: G4~500 + D4~500,
500: G4~500 + D4~500,
500: G4~500 + G5~500 + C4~500,
500: C4~500 + F5~500 + F4~500,
500: C4~500 + G5~500 + G4~500,
500: C4~500 + F5~500 + F4~500,
500: C4~500,
500: C4~500 + A4~500 + F4~500,
500: C4~500 + F4~500 + A4~500,
500: C4~500 + G4~500 + E4~500,
500: C4~500 + F4~500 + D4~500,
500: C4~500 + E4~500`
const level1m2 = tune `
500: G4^500 + D4^500,
500: G4^500 + D4^500 + G5^500,
500: G4^500 + D4^500,
500: D4^500 + F4^500 + A4^500 + A5^500,
500: D4^500 + F4^500 + A4^500 + G5^500,
500: D4^500 + F4^500 + A4^500,
500: E4^500 + G4^500 + B4^500,
500: E4^500 + G4^500 + B4^500 + F5^500,
500: E4^500 + G4^500 + B4^500 + G5^500,
500: F4^500 + A4^500 + C5^500,
500: F4^500 + A4^500 + C5^500 + F5^500,
500: F4^500 + A4^500 + C5^500,
500: D4^500 + G4^500,
500: D4^500 + G4^500,
500: D4^500 + G4^500,
500: C4^500 + G4^500 + A5^500,
500: C4^500 + F4^500 + G5^500,
500: C4^500 + G4^500 + A5^500,
500: G5^500 + C4^500 + F4^500,
500: G4^500 + D4^500,
500: G4^500 + D4^500,
500: G4^500 + D4^500,
500: G4^500 + G5^500 + C4^500,
500: C4^500 + F5^500 + F4^500,
500: C4^500 + G5^500 + G4^500,
500: C4^500 + F5^500 + F4^500,
500: C4^500,
500: C4^500 + A4^500 + F4^500,
500: C4^500 + F4^500 + A4^500,
500: C4^500 + E4^500 + G4^500,
500: C4^500 + F4^500,
500: C4^500 + E4^500 + C5^500`
const melody6 = tune`
215.8273381294964: D4/215.8273381294964 + F4/215.8273381294964 + A4/215.8273381294964 + C5/215.8273381294964,
215.8273381294964: D4/215.8273381294964 + F4/215.8273381294964 + A4/215.8273381294964,
215.8273381294964: D4/215.8273381294964 + F4/215.8273381294964,
215.8273381294964: D4/215.8273381294964,
215.8273381294964,
215.8273381294964: C5/215.8273381294964 + A4/215.8273381294964 + F4/215.8273381294964 + D4/215.8273381294964,
215.8273381294964: A4/215.8273381294964 + F4/215.8273381294964 + D4/215.8273381294964,
215.8273381294964: F4/215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4/215.8273381294964,
215.8273381294964,
215.8273381294964: E4/215.8273381294964,
215.8273381294964: E4/215.8273381294964 + G4/215.8273381294964 + B4/215.8273381294964,
215.8273381294964: E4/215.8273381294964 + G4/215.8273381294964,
215.8273381294964: E4/215.8273381294964 + D5/215.8273381294964,
215.8273381294964,
215.8273381294964: E4/215.8273381294964,
215.8273381294964: E4/215.8273381294964 + G4/215.8273381294964 + B4/215.8273381294964,
215.8273381294964: E4/215.8273381294964 + G4/215.8273381294964,
215.8273381294964: E4/215.8273381294964 + D5/215.8273381294964,
215.8273381294964: E5/215.8273381294964,
215.8273381294964,
215.8273381294964: C4/215.8273381294964 + E4/215.8273381294964 + G4/215.8273381294964 + B4/215.8273381294964,
215.8273381294964: C4/215.8273381294964 + E4/215.8273381294964 + G4/215.8273381294964,
215.8273381294964: C4/215.8273381294964 + E4/215.8273381294964,
215.8273381294964: C4/215.8273381294964,
215.8273381294964,
215.8273381294964: B4/215.8273381294964 + G4/215.8273381294964 + E4/215.8273381294964 + C4/215.8273381294964,
215.8273381294964: G4/215.8273381294964 + E4/215.8273381294964 + C4/215.8273381294964,
215.8273381294964: E4/215.8273381294964 + C4/215.8273381294964,
215.8273381294964: C4/215.8273381294964,
215.8273381294964,
215.8273381294964: B4/215.8273381294964 + G4/215.8273381294964 + E4/215.8273381294964 + C4/215.8273381294964`;

// Play it 5 times:
playTune(level1m, 2)
playTune(level1m2, 1)


// create game levels
let level = 0; // this tracks the level we are on
const levels = [
  map`
ypy
...
.bg`,
  map`
p..
.b.
..g`,
  map`
p.wg
.bw.
....
....`,
  map`
p...
...b
...b
.bbg`,
  map
`
wwwwwwwwwww
w.........w
w.ww.wwwwww
w.ww.w.w..w
wb..g.b..pw
w.ww.wbw..w
w.ww.wgw..w
w.ww.w.w..w
w.w....bg.w
wg...w.w..w
wwwwwwwwwww`,
  map `
wwwwwwwww
w.......w
ww.w.wwww
w..w.w..w
w.g.b..pw
w..wbw..w
w..wgw..w
w..w.w..w
w....bg.w
w..w.w..w
wwwwwwwww`,
  map`
wwwwwwwwwwwww
w...wg......w
w.g.w.wwww..w
w.........b.w
w...w.www.www
www....w.b..w
wp..w.w.w.w.w
w.www.w.w.w.w
w...........w
wwww...wwwwww`,
  map `
...............................
...............................
...............................
wwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
w.......ww...wg.......b.......w
w......w.w.g.w.wwww..w...w.ww.w
w.wwww...............w......b..
.w.gg...b....wwwww.w.wwwww..ww.
.b.g.w...www...w..b..w..w..w...
....wwww.wpw.w.w.w.w.w..w....ww
w.w.b.w..w.www.w.w.w....www..ww
ww....w..w...........w....w..gw
wwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
...............................
...............................
...............................`,
];

// set the map displayed to the current level
const currentLevel = levels[level];
setMap(currentLevel);

setSolids([ player, box, wall ]); // other sprites cannot go inside of these sprites

// allow certain sprites to push certain other sprites
setPushables({
  [player]: [box],
  [box]: [box]
});

// inputs for player movement control
onInput("w", () => {
  getFirst(player).y -= 1; // positive y is downwards
});

onInput("a", () => {
  getFirst(player).x -= 1;
});

onInput("s", () => {
  getFirst(player).y += 1; // positive y is downwards
});

onInput("d", () => {
  getFirst(player).x += 1;
});

// input to reset level
onInput("j", () => {
  const currentLevel = levels[level]; // get the original map of the level

  // make sure the level exists before we load it
  if (currentLevel !== undefined) {
    clearText("");
    setMap(currentLevel);
  } 
});
if (currentLevel == 2) {
  playTune (melody6,1)
}
// these get run after every input
afterInput(() => {
  // count the number of tiles with goals
  const targetNumber = tilesWith(goal).length;
  
  // count the number of tiles with goals and boxes
  const numberCovered = tilesWith(goal, box).length;

  // if the number of goals is the same as the number of goals covered
  // all goals are covered and we can go to the next level
  if (numberCovered === targetNumber) {
    // increase the current level number
    level = level + 1;

    const currentLevel = levels[level];

    // make sure the level exists and if so set the map
    // otherwise, we have finished the last level, there is no level
    // after the last level
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
      addText("you win!", { y: 4, color: color`3` });
    }
  }
});